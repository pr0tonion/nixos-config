# This is a template hardware configuration
# After installation, this will be auto-generated by nixos-generate-config
# For now, this contains sensible defaults for your Intel i7-10700 system

{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # CPU configuration for Intel i7-10700
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # Enable Intel microcode updates
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Enable Intel integrated graphics
  hardware.opengl = {
    enable = true;
    extraPackages = with pkgs; [
      intel-media-driver # For VAAPI support (Broadwell and newer)
      vaapiIntel         # For older Intel GPUs
      vaapiVdpau
      libvdpau-va-gl
      intel-compute-runtime # For Intel OpenCL support
    ];
  };

  # Enable hardware video acceleration
  hardware.opengl.driSupport = true;
  hardware.opengl.driSupport32Bit = true;

  # Filesystem configuration (template - will be replaced during installation)
  fileSystems."/" = {
    device = "/dev/disk/by-label/nixos";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-label/boot";
    fsType = "vfat";
  };

  # Media storage directory
  fileSystems."/srv/media" = {
    device = "/dev/disk/by-label/media"; # Adjust based on your actual disk setup
    fsType = "ext4";
    options = [ "defaults" "nofail" ]; # nofail allows boot even if disk isn't present
  };

  # Swap configuration (adjust size as needed)
  swapDevices = [ ];

  # Network interface for Wake-on-LAN
  # This will be auto-detected during installation
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;

  # Maximum number of open files (useful for torrent clients and Plex)
  boot.kernel.sysctl = {
    "fs.inotify.max_user_watches" = 524288;
    "fs.file-max" = 100000;
  };

  # Power management
  powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";
}
